version: '3.8'

services:
  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./user-service:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - pharmacy-network

  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGODB_URI=${MONGODB_URI}
      - CLOUDINARY_URL=${CLOUDINARY_URL}
    volumes:
      - ./product-service:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - pharmacy-network

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - MONGODB_URI=${MONGODB_URI}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    volumes:
      - ./order-service:/app
      - /app/node_modules
    depends_on:
      - mongodb
    networks:
      - pharmacy-network

  # MongoDB (for local development)
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=pharmacy
    volumes:
      - mongodb_data:/data/db
    networks:
      - pharmacy-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pharmacy-network

  # Nginx (API Gateway)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - user-service
      - product-service
      - order-service
    networks:
      - pharmacy-network

volumes:
  mongodb_data:
  redis_data:

networks:
  pharmacy-network:
    driver: bridge 